// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏ô Database
// ‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢: node add-rooms-to-database.js

const { PrismaClient } = require('@prisma/client');

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°
const hotelRoomsData = [
  // 1. Private House (1 ‡∏´‡∏•‡∏±‡∏á)
  {
    roomNumber: "P1",
    roomTypeId: null, // ‡∏à‡∏∞‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á RoomType
    roomTypeName: "Private House",
    status: "Available",
    notes: "Luxury private house with 3 king-size bedrooms, perfect for families or groups seeking privacy and comfort. Features spacious living areas, private garden, and premium amenities.",
    // Room Type Details
    roomTypeData: {
      name: "Private House",
      description: "Luxury private house with 3 king-size bedrooms",
      capacity: 6,
      baseRate: 35000.00,
      sizeSqm: 200,
      bedType: "3 King Beds",
      amenities: [
        "3 King-size bedrooms",
        "Private garden", 
        "Spacious living areas",
        "Premium amenities",
        "Wi-Fi",
        "Air conditioning",
        "Private kitchen",
        "Parking"
      ]
    }
  },

  // 2. Onsen Rooms (5 ‡∏´‡πâ‡∏≠‡∏á) - B1, B2, C1, C2, D1
  {
    roomNumber: "B1",
    roomTypeId: null,
    roomTypeName: "Onsen",
    status: "Available", 
    notes: "Traditional Japanese-style onsen room with king-size bed and private hot spring bath",
    roomTypeData: {
      name: "Onsen",
      description: "Traditional Japanese-style onsen room with private hot spring bath",
      capacity: 2,
      baseRate: 18000.00,
      sizeSqm: 35,
      bedType: "King Bed",
      amenities: [
        "Private onsen (hot spring bath)",
        "King-size bed",
        "Traditional Japanese decor",
        "Wi-Fi",
        "Air conditioning",
        "Tea making facilities",
        "Yukata robes"
      ]
    }
  },
  {
    roomNumber: "B2",
    roomTypeId: null,
    roomTypeName: "Onsen",
    status: "Available",
    notes: "Traditional Japanese-style onsen room with king-size bed and private hot spring bath"
  },
  {
    roomNumber: "C1", 
    roomTypeId: null,
    roomTypeName: "Onsen",
    status: "Available",
    notes: "Traditional Japanese-style onsen room with king-size bed and private hot spring bath"
  },
  {
    roomNumber: "C2",
    roomTypeId: null,
    roomTypeName: "Onsen", 
    status: "Available",
    notes: "Traditional Japanese-style onsen room with king-size bed and private hot spring bath"
  },
  {
    roomNumber: "D1",
    roomTypeId: null,
    roomTypeName: "Onsen",
    status: "Available",
    notes: "Traditional Japanese-style onsen room with king-size bed and private hot spring bath"
  },

  // 3. Canopy Pool Villa (3 ‡∏´‡πâ‡∏≠‡∏á) - E1, E2, E3
  {
    roomNumber: "E1",
    roomTypeId: null,
    roomTypeName: "Canopy Pool Villa",
    status: "Available",
    notes: "Modern pool villa with stunning canopy design and king-size bed. Pool access until 10 PM",
    roomTypeData: {
      name: "Canopy Pool Villa",
      description: "Modern pool villa with stunning canopy design and private pool access",
      capacity: 2,
      capacityAdults: 2,
      capacityChildren: 1,
      baseRate: 8000.00,
      extraBedCharge: 1000.00,
      sizeSqm: 45,
      bedType: "King Bed",
      amenities: [
        "Private pool access",
        "King-size bed", 
        "Extra bed available",
        "Canopy design",
        "Contemporary amenities",
        "Tropical garden views",
        "Wi-Fi",
        "Air conditioning",
        "Mini refrigerator"
      ]
    }
  },
  {
    roomNumber: "E2",
    roomTypeId: null,
    roomTypeName: "Canopy Pool Villa",
    status: "Available",
    notes: "Modern pool villa with stunning canopy design and king-size bed. Pool access until 10 PM"
  },
  {
    roomNumber: "E3",
    roomTypeId: null,
    roomTypeName: "Canopy Pool Villa", 
    status: "Available",
    notes: "Modern pool villa with stunning canopy design and king-size bed. Pool access until 10 PM"
  },

  // 4. Grand Serenity (3 ‡∏´‡πâ‡∏≠‡∏á) - F1, F2, F3
  {
    roomNumber: "F1",
    roomTypeId: null,
    roomTypeName: "Grand Serenity",
    status: "Available",
    notes: "Elegant grand serenity suite with king-size bed and tranquil atmosphere. Quiet hours from 10 PM - 8 AM",
    roomTypeData: {
      name: "Grand Serenity",
      description: "Elegant grand serenity suite with tranquil atmosphere",
      capacity: 2,
      capacityAdults: 2,
      capacityChildren: 1, 
      baseRate: 8500.00,
      extraBedCharge: 1000.00,
      sizeSqm: 40,
      bedType: "King Bed",
      amenities: [
        "King-size bed",
        "Extra bed available", 
        "Premium furnishing",
        "Peaceful ambiance",
        "Luxurious amenities",
        "Wi-Fi",
        "Air conditioning",
        "Mini bar",
        "Balcony with garden view"
      ]
    }
  },
  {
    roomNumber: "F2",
    roomTypeId: null,
    roomTypeName: "Grand Serenity",
    status: "Available", 
    notes: "Elegant grand serenity suite with king-size bed and tranquil atmosphere. Quiet hours from 10 PM - 8 AM"
  },
  {
    roomNumber: "F3",
    roomTypeId: null,
    roomTypeName: "Grand Serenity",
    status: "Available",
    notes: "Elegant grand serenity suite with king-size bed and tranquil atmosphere. Quiet hours from 10 PM - 8 AM"
  }
];

async function addRoomsToDatabase() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üè® ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤ Database...');
    console.log(`üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°: ${hotelRoomsData.length} ‡∏´‡πâ‡∏≠‡∏á`);
    console.log('');

    let successCount = 0;
    let failedCount = 0;
    const roomTypes = new Map(); // ‡πÄ‡∏Å‡πá‡∏ö RoomType ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß

    for (let i = 0; i < hotelRoomsData.length; i++) {
      const roomData = hotelRoomsData[i];
      
      try {
        console.log(`üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á ${i + 1}/${hotelRoomsData.length}: ${roomData.roomNumber} (${roomData.roomTypeName})`);
        
        // 1. ‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á RoomType
        let roomType;
        if (roomTypes.has(roomData.roomTypeName)) {
          roomType = roomTypes.get(roomData.roomTypeName);
          console.log(`   üîç ‡πÉ‡∏ä‡πâ RoomType ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà: ${roomType.id}`);
        } else {
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á RoomType ‡πÉ‡∏´‡∏°‡πà
          if (roomData.roomTypeData) {
            roomType = await prisma.roomType.create({
              data: {
                name: roomData.roomTypeData.name,
                description: roomData.roomTypeData.description,
                capacityAdults: roomData.roomTypeData.capacityAdults || roomData.roomTypeData.capacity,
                capacityChildren: roomData.roomTypeData.capacityChildren || 0,
                baseRate: roomData.roomTypeData.baseRate,
                sizeSqm: roomData.roomTypeData.sizeSqm || null,
                bedType: roomData.roomTypeData.bedType,
                amenities: roomData.roomTypeData.amenities,
                isActive: true
              }
            });
            roomTypes.set(roomData.roomTypeName, roomType);
            console.log(`   ‚ú® ‡∏™‡∏£‡πâ‡∏≤‡∏á RoomType ‡πÉ‡∏´‡∏°‡πà: ${roomType.id} (${roomType.name})`);
          } else {
            // ‡πÉ‡∏ä‡πâ RoomType ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
            roomType = roomTypes.get(roomData.roomTypeName);
            if (!roomType) {
              throw new Error(`RoomType ${roomData.roomTypeName} not found and no roomTypeData provided`);
            }
          }
        }

        // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Room
        const room = await prisma.room.create({
          data: {
            roomNumber: roomData.roomNumber,
            roomTypeId: roomType.id,
            status: roomData.status || 'Available',
            notes: roomData.notes || null
          }
        });

        console.log(`   ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á ${roomData.roomNumber} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ID: ${room.id}`);
        console.log(`   üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: ‡∏ø${roomType.baseRate.toLocaleString()}/‡∏Ñ‡∏∑‡∏ô | üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${roomType.capacityAdults + roomType.capacityChildren} ‡∏Ñ‡∏ô`);
        successCount++;

      } catch (error) {
        console.error(`   ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á ${roomData.roomNumber}:`, error.message);
        failedCount++;
      }
      
      console.log('');
    }

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    console.log('='.repeat(60));
    console.log('üéâ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å:');
    console.log('='.repeat(60));
    console.log(`‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${successCount} ‡∏´‡πâ‡∏≠‡∏á`);
    console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${failedCount} ‡∏´‡πâ‡∏≠‡∏á`);
    console.log(`üìä ‡∏£‡∏ß‡∏°: ${successCount + failedCount} ‡∏´‡πâ‡∏≠‡∏á`);
    
    if (successCount > 0) {
      console.log('');
      console.log('üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:');
      roomTypes.forEach((roomType, name) => {
        console.log(`   ‚Ä¢ ${name}: ‡∏ø${roomType.baseRate.toLocaleString()}/‡∏Ñ‡∏∑‡∏ô (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${roomType.capacityAdults + roomType.capacityChildren} ‡∏Ñ‡∏ô)`);
      });
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà
      const totalRooms = await prisma.room.count();
      const totalRevenue = Array.from(roomTypes.values()).reduce((sum, rt) => {
        const roomCount = hotelRoomsData.filter(r => r.roomTypeName === rt.name).length;
        return sum + (rt.baseRate * roomCount);
      }, 0);
      
      console.log('');
      console.log(`üíº ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏Ñ‡∏∑‡∏ô: ‡∏ø${totalRevenue.toLocaleString()}`);
      console.log(`üíº ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: ‡∏ø${(totalRevenue * 30).toLocaleString()}`);
      console.log(`üè® ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: ${totalRooms} ‡∏´‡πâ‡∏≠‡∏á`);
    }

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
if (require.main === module) {
  addRoomsToDatabase()
    .then(() => {
      console.log('\nüéØ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
      process.exit(1);
    });
}

module.exports = { addRoomsToDatabase, hotelRoomsData };
