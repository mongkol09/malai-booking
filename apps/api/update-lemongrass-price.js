const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function updateLemongrassRoomPrice() {
  try {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á Lemongrass Room...');
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á Lemongrass Room
    const lemongrassRoomType = await prisma.roomType.findFirst({
      where: {
        name: {
          contains: 'Lemongrass',
          mode: 'insensitive'
        }
      }
    });

    if (!lemongrassRoomType) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á Lemongrass Room ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ
      const allRoomTypes = await prisma.roomType.findMany({
        select: {
          id: true,
          name: true,
          baseRate: true
        }
      });
      
      console.log('\nüìã ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:');
      allRoomTypes.forEach(room => {
        console.log(`  - ${room.name}: ‡∏ø${room.baseRate}`);
      });
      
      return;
    }

    console.log(`‚úÖ ‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á: ${lemongrassRoomType.name}`);
    console.log(`üìç ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ‡∏ø${lemongrassRoomType.baseRate}`);
    
    if (lemongrassRoomType.baseRate == 7500) {
      console.log('‚ú® ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß (7500 ‡∏ö‡∏≤‡∏ó)');
      return;
    }

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô 7500 ‡∏ö‡∏≤‡∏ó...');
    
    const updatedRoomType = await prisma.roomType.update({
      where: {
        id: lemongrassRoomType.id
      },
      data: {
        baseRate: 7500
      }
    });

    console.log('‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log(`üìç ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà: ‡∏ø${updatedRoomType.baseRate}`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    const verifyUpdate = await prisma.roomType.findUnique({
      where: {
        id: lemongrassRoomType.id
      }
    });
    
    console.log(`\nüîç ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó:`);
    console.log(`  - ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á: ${verifyUpdate.name}`);
    console.log(`  - ‡∏£‡∏≤‡∏Ñ‡∏≤: ‡∏ø${verifyUpdate.baseRate}`);
    console.log(`  - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${verifyUpdate.baseRate == 7500 ? '‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' : '‚ùå ‡∏¢‡∏±‡∏á‡∏ú‡∏¥‡∏î'}`);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
updateLemongrassRoomPrice();