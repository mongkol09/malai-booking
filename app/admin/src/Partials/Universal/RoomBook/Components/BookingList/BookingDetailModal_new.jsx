import React, { useState, useEffect } from 'react';
import { Modal, Button, Alert, Spinner, Card, Row, Col, Form, Badge } from 'react-bootstrap';
import bookingService from '../../../../../services/bookingService';

const BookingDetailModal = ({ show, onHide, bookingId }) => {
  const [booking, setBooking] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(false);
  const [isEditMode, setIsEditMode] = useState(false);
  const [guestData, setGuestData] = useState({
    title: 'Mr.',
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    nationality: 'Thai',
    dateOfBirth: '',
    gender: '',
    address: '',
    city: '',
    state: '',
    country: '',
    zipCode: '',
    idType: 'National ID',
    idNumber: '',
    passportNumber: '',
    emergencyContact: '',
    emergencyPhone: '',
    specialRequests: '',
    dietaryRestrictions: '',
    accessibilityNeeds: ''
  });

  // Helper functions
  const formatDate = (dateString) => {
    if (!dateString) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const date = new Date(dateString);
    return date.toLocaleDateString('th-TH');
  };

  const formatDateTime = (dateString) => {
    if (!dateString) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const date = new Date(dateString);
    return date.toLocaleString('th-TH');
  };

  const formatCurrency = (amount) => {
    if (!amount) return '‡∏ø0.00';
    return `‡∏ø${parseFloat(amount).toLocaleString('th-TH', { minimumFractionDigits: 2 })}`;
  };

  const getStatusBadgeVariant = (status) => {
    switch (status?.toLowerCase()) {
      case 'confirmed': return 'success';
      case 'pending': return 'warning';
      case 'cancelled': return 'danger';
      case 'checked-in': return 'info';
      case 'checked-out': return 'secondary';
      default: return 'primary';
    }
  };

  // Prefill guest data from booking
  const prefillGuestData = (bookingData) => {
    if (!bookingData) return;

    const guest = bookingData.guest || {};
    setGuestData({
      title: guest.title || 'Mr.',
      firstName: guest.firstName || guest.name?.split(' ')[0] || '',
      lastName: guest.lastName || guest.name?.split(' ').slice(1).join(' ') || '',
      email: guest.email || '',
      phone: guest.phone || '',
      nationality: guest.nationality || 'Thai',
      dateOfBirth: guest.dateOfBirth || '',
      gender: guest.gender || '',
      address: guest.address || '',
      city: guest.city || '',
      state: guest.state || '',
      country: guest.country || '',
      zipCode: guest.zipCode || '',
      idType: guest.idType || 'National ID',
      idNumber: guest.idNumber || '',
      passportNumber: guest.passportNumber || '',
      emergencyContact: guest.emergencyContact || '',
      emergencyPhone: guest.emergencyPhone || '',
      specialRequests: bookingData.specialRequests || '',
      dietaryRestrictions: guest.dietaryRestrictions || '',
      accessibilityNeeds: guest.accessibilityNeeds || ''
    });
  };

  // Load booking details
  const loadBookingDetails = async () => {
    if (!bookingId) return;

    try {
      setLoading(true);
      setError(null);
      
      console.log('üîç Loading booking details for ID:', bookingId);
      
      const response = await bookingService.getBookingById(bookingId);
      
      if (response.success && response.booking) {
        setBooking(response.booking);
        prefillGuestData(response.booking);
        console.log('‚úÖ Booking loaded:', response.booking);
      } else {
        setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á');
      }
    } catch (err) {
      console.error('‚ùå Error loading booking:', err);
      setError(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${err.message}`);
    } finally {
      setLoading(false);
    }
  };

  // Load booking when modal opens
  useEffect(() => {
    if (show && bookingId) {
      loadBookingDetails();
    }
  }, [show, bookingId]);

  // Handle input changes
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setGuestData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // Handle save
  const handleSave = async () => {
    try {
      setLoading(true);
      setError(null);
      
      console.log('üíæ Saving guest data:', guestData);
      
      // TODO: Call API to update guest data
      const response = await bookingService.updateGuestData(booking.id, guestData);
      
      if (response.success) {
        setSuccess(true);
        setIsEditMode(false);
        
        // Reload booking data
        await loadBookingDetails();
        
        // Show success message
        setTimeout(() => setSuccess(false), 3000);
      }
    } catch (err) {
      console.error('‚ùå Error saving guest data:', err);
      setError(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${err.message}`);
    } finally {
      setLoading(false);
    }
  };

  const handleClose = () => {
    setIsEditMode(false);
    setError(null);
    setSuccess(false);
    onHide();
  };

  const renderPaymentStatus = () => {
    if (!booking) return null;
    
    return (
      <Card className="mb-3">
        <Card.Header className="bg-info text-white">
          <h6 className="mb-0">
            <i className="bi bi-credit-card me-2"></i>
            ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
          </h6>
        </Card.Header>
        <Card.Body>
          <Row>
            <Col md={4}>
              <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°:</strong><br />
              {formatCurrency(booking.totalAmount || booking.finalAmount)}
            </Col>
            <Col md={4}>
              <strong>‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß:</strong><br />
              {formatCurrency(booking.paidAmount || 0)}
            </Col>
            <Col md={4}>
              <strong>‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong><br />
              <span className={parseFloat(booking.dueAmount || 0) > 0 ? 'text-danger' : 'text-success'}>
                {formatCurrency(booking.dueAmount || 0)}
              </span>
            </Col>
          </Row>
          <hr />
          <div className="text-center">
            <Badge bg={parseFloat(booking.dueAmount || 0) > 0 ? 'warning' : 'success'} className="fs-6 px-3 py-2">
              {parseFloat(booking.dueAmount || 0) > 0 ? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡∏£‡∏ö' : '‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß'}
            </Badge>
          </div>
        </Card.Body>
      </Card>
    );
  };

  if (loading) {
    return (
      <Modal show={show} onHide={onHide} size="lg" centered>
        <Modal.Body className="text-center py-5">
          <Spinner animation="border" variant="primary" />
          <p className="mt-3">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...</p>
        </Modal.Body>
      </Modal>
    );
  }

  return (
    <Modal 
      show={show} 
      onHide={handleClose} 
      size="xl" 
      backdrop="static"
      scrollable
    >
      <Modal.Header closeButton>
        <Modal.Title>
          <i className="bi bi-receipt me-2"></i>
          ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á - {booking?.bookingReferenceId || bookingId}
        </Modal.Title>
      </Modal.Header>
      
      <Modal.Body>
        {loading && (
          <div className="text-center p-3">
            <Spinner animation="border" role="status" className="me-2" />
            ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...
          </div>
        )}

        {error && (
          <Alert variant="danger">
            <i className="bi bi-exclamation-triangle me-2"></i>
            {error}
          </Alert>
        )}

        {success && (
          <Alert variant="success">
            <i className="bi bi-check-circle me-2"></i>
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
          </Alert>
        )}

        {booking && (
          <>
            {/* Payment Status Section */}
            {renderPaymentStatus()}

            {/* Guest Data Form */}
            <Card>
              <Card.Header className="d-flex justify-content-between align-items-center">
                <h6 className="mb-0">
                  <i className="bi bi-person me-2"></i>
                  ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                </h6>
                <div>
                  {!isEditMode ? (
                    <Button variant="outline-primary" size="sm" onClick={() => setIsEditMode(true)}>
                      <i className="bi bi-pencil me-1"></i>
                      ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    </Button>
                  ) : (
                    <>
                      <Button variant="outline-secondary" size="sm" className="me-2" onClick={() => setIsEditMode(false)}>
                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                      </Button>
                      <Button variant="primary" size="sm" onClick={handleSave} disabled={loading}>
                        <i className="bi bi-save me-1"></i>
                        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                      </Button>
                    </>
                  )}
                </div>
              </Card.Header>
              
              <Card.Body>
                {/* Basic Information */}
                <h6 className="border-bottom pb-2 mb-3">
                  <i className="bi bi-person-fill me-2"></i>
                  ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
                </h6>
                
                <Row className="mb-3">
                  <Col md={2}>
                    <Form.Group>
                      <Form.Label>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</Form.Label>
                      <Form.Select
                        name="title"
                        value={guestData.title}
                        onChange={handleInputChange}
                        disabled={!isEditMode}
                      >
                        <option value="Mr.">‡∏ô‡∏≤‡∏¢</option>
                        <option value="Mrs.">‡∏ô‡∏≤‡∏á</option>
                        <option value="Ms.">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
                        <option value="Dr.">‡∏î‡∏£.</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  <Col md={5}>
                    <Form.Group>
                      <Form.Label>‡∏ä‡∏∑‡πà‡∏≠ *</Form.Label>
                      <Form.Control
                        type="text"
                        name="firstName"
                        value={guestData.firstName}
                        onChange={handleInputChange}
                        placeholder="‡∏ä‡∏∑‡πà‡∏≠"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={5}>
                    <Form.Group>
                      <Form.Label>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• *</Form.Label>
                      <Form.Control
                        type="text"
                        name="lastName"
                        value={guestData.lastName}
                        onChange={handleInputChange}
                        placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row className="mb-3">
                  <Col md={6}>
                    <Form.Group>
                      <Form.Label>‡∏≠‡∏µ‡πÄ‡∏°‡∏• *</Form.Label>
                      <Form.Control
                        type="email"
                        name="email"
                        value={guestData.email}
                        onChange={handleInputChange}
                        placeholder="email@example.com"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *</Form.Label>
                      <Form.Control
                        type="tel"
                        name="phone"
                        value={guestData.phone}
                        onChange={handleInputChange}
                        placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥</Form.Label>
                      <Form.Select
                        name="nationality"
                        value={guestData.nationality}
                        onChange={handleInputChange}
                        disabled={!isEditMode}
                      >
                        <option value="Thai">‡πÑ‡∏ó‡∏¢</option>
                        <option value="American">‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏±‡∏ô</option>
                        <option value="British">‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</option>
                        <option value="Chinese">‡∏à‡∏µ‡∏ô</option>
                        <option value="Japanese">‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô</option>
                        <option value="Other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>

                <Row className="mb-3">
                  <Col md={4}>
                    <Form.Group>
                      <Form.Label>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</Form.Label>
                      <Form.Control
                        type="date"
                        name="dateOfBirth"
                        value={guestData.dateOfBirth}
                        onChange={handleInputChange}
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={4}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏û‡∏®</Form.Label>
                      <Form.Select
                        name="gender"
                        value={guestData.gender}
                        onChange={handleInputChange}
                        disabled={!isEditMode}
                      >
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®</option>
                        <option value="Male">‡∏ä‡∏≤‡∏¢</option>
                        <option value="Female">‡∏´‡∏ç‡∏¥‡∏á</option>
                        <option value="Other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>

                {/* Address Information */}
                <h6 className="border-bottom pb-2 mb-3 mt-4">
                  <i className="bi bi-geo-alt me-2"></i>
                  ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
                </h6>
                
                <Row className="mb-3">
                  <Col md={12}>
                    <Form.Group>
                      <Form.Label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</Form.Label>
                      <Form.Control
                        as="textarea"
                        rows={2}
                        name="address"
                        value={guestData.address}
                        onChange={handleInputChange}
                        placeholder="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row className="mb-3">
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏°‡∏∑‡∏≠‡∏á</Form.Label>
                      <Form.Control
                        type="text"
                        name="city"
                        value={guestData.city}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</Form.Label>
                      <Form.Control
                        type="text"
                        name="state"
                        value={guestData.state}
                        onChange={handleInputChange}
                        placeholder="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</Form.Label>
                      <Form.Control
                        type="text"
                        name="country"
                        value={guestData.country}
                        onChange={handleInputChange}
                        placeholder="‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={3}>
                    <Form.Group>
                      <Form.Label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</Form.Label>
                      <Form.Control
                        type="text"
                        name="zipCode"
                        value={guestData.zipCode}
                        onChange={handleInputChange}
                        placeholder="‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                {/* ID Documents */}
                <h6 className="border-bottom pb-2 mb-3 mt-4">
                  <i className="bi bi-card-text me-2"></i>
                  ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß
                </h6>
                
                <Row className="mb-3">
                  <Col md={4}>
                    <Form.Group>
                      <Form.Label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏±‡∏ï‡∏£</Form.Label>
                      <Form.Select
                        name="idType"
                        value={guestData.idType}
                        onChange={handleInputChange}
                        disabled={!isEditMode}
                      >
                        <option value="National ID">‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</option>
                        <option value="Passport">‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï</option>
                        <option value="Driver License">‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  <Col md={4}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</Form.Label>
                      <Form.Control
                        type="text"
                        name="idNumber"
                        value={guestData.idNumber}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={4}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏•‡∏Ç‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï</Form.Label>
                      <Form.Control
                        type="text"
                        name="passportNumber"
                        value={guestData.passportNumber}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏•‡∏Ç‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                {/* Emergency Contact */}
                <h6 className="border-bottom pb-2 mb-3 mt-4">
                  <i className="bi bi-telephone me-2"></i>
                  ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
                </h6>
                
                <Row className="mb-3">
                  <Col md={6}>
                    <Form.Group>
                      <Form.Label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</Form.Label>
                      <Form.Control
                        type="text"
                        name="emergencyContact"
                        value={guestData.emergencyContact}
                        onChange={handleInputChange}
                        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={6}>
                    <Form.Group>
                      <Form.Label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</Form.Label>
                      <Form.Control
                        type="tel"
                        name="emergencyPhone"
                        value={guestData.emergencyPhone}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                {/* Special Requests */}
                <h6 className="border-bottom pb-2 mb-3 mt-4">
                  <i className="bi bi-star me-2"></i>
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©
                </h6>
                
                <Row className="mb-3">
                  <Col md={12}>
                    <Form.Group>
                      <Form.Label>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©</Form.Label>
                      <Form.Control
                        as="textarea"
                        rows={3}
                        name="specialRequests"
                        value={guestData.specialRequests}
                        onChange={handleInputChange}
                        placeholder="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà, ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ Check-in ‡∏û‡∏¥‡πÄ‡∏®‡∏©, ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row className="mb-3">
                  <Col md={6}>
                    <Form.Group>
                      <Form.Label>‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£</Form.Label>
                      <Form.Control
                        type="text"
                        name="dietaryRestrictions"
                        value={guestData.dietaryRestrictions}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏±‡∏á‡∏™‡∏ß‡∏¥‡∏£‡∏±‡∏ï‡∏¥, ‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏´‡∏°‡∏π, ‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏Å‡∏•‡∏π‡πÄ‡∏ï‡πá‡∏ô"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                  <Col md={6}>
                    <Form.Group>
                      <Form.Label>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á)</Form.Label>
                      <Form.Control
                        type="text"
                        name="accessibilityNeeds"
                        value={guestData.accessibilityNeeds}
                        onChange={handleInputChange}
                        placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô, ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏á‡πà‡∏≤‡∏¢, ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô"
                        disabled={!isEditMode}
                      />
                    </Form.Group>
                  </Col>
                </Row>
              </Card.Body>
            </Card>
          </>
        )}
      </Modal.Body>
      
      <Modal.Footer>
        <Button variant="secondary" onClick={handleClose}>
          ‡∏õ‡∏¥‡∏î
        </Button>
      </Modal.Footer>
    </Modal>
  );
};

export default BookingDetailModal;
