import React, { useState, useEffect } from 'react';
import { Modal, Button, Form, Row, Col, Alert, Spinner } from 'react-bootstrap';
import bookingService from '../../../../../services/bookingService';

const GuestDataCompletionModal = ({ show, onHide, booking, onSave }) => {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(false);
  
  const [guestData, setGuestData] = useState({
    // Basic Info (from Quick Booking)
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    
    // Additional Info (to be completed)
    nationality: 'Thai',
    dateOfBirth: '',
    gender: '',
    title: 'Mr.',
    
    // Address Info
    address: '',
    city: '',
    state: '',
    country: 'Thailand',
    zipCode: '',
    
    // ID Document Info
    idType: 'National ID',
    idNumber: '',
    passportNumber: '',
    
    // Contact Info
    emergencyContact: '',
    emergencyPhone: '',
    
    // Preferences
    specialRequests: '',
    dietaryRestrictions: '',
    accessibilityNeeds: '',
    
    // Company Info (optional)
    company: '',
    companyAddress: '',
    taxId: '',
    
    // Marketing
    marketingConsent: false,
    newsletterSubscription: false
  });

  // Load existing booking data when modal opens
  useEffect(() => {
    if (show && booking) {
      console.log('üìã Loading booking data for guest completion:', booking);
      
      // Pre-fill with existing data
      setGuestData(prev => ({
        ...prev,
        firstName: booking.customerName?.split(' ')[0] || '',
        lastName: booking.customerName?.split(' ').slice(1).join(' ') || '',
        email: booking.customerEmail || '',
        phone: booking.customerPhone || '',
        specialRequests: booking.specialRequests || ''
      }));
      
      setError(null);
      setSuccess(false);
    }
  }, [show, booking]);

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target;
    setGuestData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handleSave = async () => {
    try {
      setLoading(true);
      setError(null);
      
      console.log('üíæ Saving guest data for booking:', booking);
      console.log('üíæ Guest data to save:', guestData);
      console.log('üíæ Booking ID:', booking.id);
      console.log('üíæ Booking object keys:', Object.keys(booking));
      
      // Validate form first
      if (!validateForm()) {
        setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (‡∏ä‡∏∑‡πà‡∏≠, ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•, ‡∏≠‡∏µ‡πÄ‡∏°‡∏•, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£)');
        return;
      }
      
      // Call API to update guest data
      const response = await bookingService.updateGuestData(booking.id, guestData);
      
      console.log('‚úÖ API response:', response);
      
      if (response.success) {
        setSuccess(true);
        
        // Notify parent component
        if (onSave) {
          onSave(response.data);
        }
        
        // Show success message and close modal after delay
        setTimeout(() => {
          setSuccess(false);
          onHide();
        }, 1500);
      } else {
        console.warn('‚ö†Ô∏è API returned non-success response:', response);
        throw new Error(response.message || response.error?.message || 'Failed to update guest data');
      }
      
    } catch (error) {
      console.error('‚ùå Error saving guest data:', error);
      console.error('‚ùå Error details:', {
        message: error.message,
        response: error.response,
        status: error.response?.status,
        data: error.response?.data
      });
      
      let errorMessage = 'Failed to save guest data';
      if (error.response?.data?.error?.message) {
        errorMessage = error.response.data.error.message;
      } else if (error.response?.data?.message) {
        errorMessage = error.response.data.message;
      } else if (error.message) {
        errorMessage = error.message;
      }
      
      setError(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  const validateForm = () => {
    // Basic validation - at least name and contact info
    return guestData.firstName.trim() && 
           guestData.lastName.trim() && 
           guestData.email.trim() && 
           guestData.phone.trim();
  };

  if (!booking) return null;

  return (
    <Modal show={show} onHide={onHide} size="xl" backdrop="static">
      <Modal.Header closeButton>
        <Modal.Title>
          <i className="bi bi-person-plus me-2"></i>
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ - {booking.bookingReferenceId}
        </Modal.Title>
      </Modal.Header>
      
      <Modal.Body style={{ maxHeight: '70vh', overflowY: 'auto' }}>
        {error && (
          <Alert variant="danger" className="mb-3">
            <i className="bi bi-exclamation-triangle me-2"></i>
            {error}
          </Alert>
        )}
        
        {success && (
          <Alert variant="success" className="mb-3">
            <i className="bi bi-check-circle me-2"></i>
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
          </Alert>
        )}
        
        <Form>
          {/* Basic Information */}
          <div className="card mb-4">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-person me-2"></i>
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
              </h6>
            </div>
            <div className="card-body">
              <Row>
                <Col md={2}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</Form.Label>
                    <Form.Select
                      name="title"
                      value={guestData.title}
                      onChange={handleInputChange}
                    >
                      <option value="Mr.">‡∏ô‡∏≤‡∏¢</option>
                      <option value="Mrs.">‡∏ô‡∏≤‡∏á</option>
                      <option value="Ms.">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
                      <option value="Dr.">‡∏î‡∏£.</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
                <Col md={5}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏ä‡∏∑‡πà‡∏≠ <span className="text-danger">*</span></Form.Label>
                    <Form.Control
                      type="text"
                      name="firstName"
                      value={guestData.firstName}
                      onChange={handleInputChange}
                      placeholder="‡∏ä‡∏∑‡πà‡∏≠"
                      required
                    />
                  </Form.Group>
                </Col>
                <Col md={5}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• <span className="text-danger">*</span></Form.Label>
                    <Form.Control
                      type="text"
                      name="lastName"
                      value={guestData.lastName}
                      onChange={handleInputChange}
                      placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                      required
                    />
                  </Form.Group>
                </Col>
              </Row>
              
              <Row>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏≠‡∏µ‡πÄ‡∏°‡∏• <span className="text-danger">*</span></Form.Label>
                    <Form.Control
                      type="email"
                      name="email"
                      value={guestData.email}
                      onChange={handleInputChange}
                      placeholder="email@example.com"
                      required
                    />
                  </Form.Group>
                </Col>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå <span className="text-danger">*</span></Form.Label>
                    <Form.Control
                      type="tel"
                      name="phone"
                      value={guestData.phone}
                      onChange={handleInputChange}
                      placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
                      required
                    />
                  </Form.Group>
                </Col>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥</Form.Label>
                    <Form.Select
                      name="nationality"
                      value={guestData.nationality}
                      onChange={handleInputChange}
                    >
                      <option value="Thai">‡πÑ‡∏ó‡∏¢</option>
                      <option value="American">‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏±‡∏ô</option>
                      <option value="British">‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</option>
                      <option value="Chinese">‡∏à‡∏µ‡∏ô</option>
                      <option value="Japanese">‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô</option>
                      <option value="Other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
              </Row>
              
              <Row>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</Form.Label>
                    <Form.Control
                      type="date"
                      name="dateOfBirth"
                      value={guestData.dateOfBirth}
                      onChange={handleInputChange}
                    />
                  </Form.Group>
                </Col>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡πÄ‡∏û‡∏®</Form.Label>
                    <Form.Select
                      name="gender"
                      value={guestData.gender}
                      onChange={handleInputChange}
                    >
                      <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®</option>
                      <option value="Male">‡∏ä‡∏≤‡∏¢</option>
                      <option value="Female">‡∏´‡∏ç‡∏¥‡∏á</option>
                      <option value="Other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
              </Row>
            </div>
          </div>
          
          {/* Address Information */}
          <div className="card mb-4">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-geo-alt me-2"></i>
                ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
              </h6>
            </div>
            <div className="card-body">
              <Row>
                <Col md={12}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</Form.Label>
                    <Form.Control
                      as="textarea"
                      rows={2}
                      name="address"
                      value={guestData.address}
                      onChange={handleInputChange}
                      placeholder="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"
                    />
                  </Form.Group>
                </Col>
              </Row>
              
              <Row>
                <Col md={3}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡πÄ‡∏°‡∏∑‡∏≠‡∏á</Form.Label>
                    <Form.Control
                      type="text"
                      name="city"
                      value={guestData.city}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
                    />
                  </Form.Group>
                </Col>
                <Col md={3}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</Form.Label>
                    <Form.Control
                      type="text"
                      name="state"
                      value={guestData.state}
                      onChange={handleInputChange}
                      placeholder="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
                    />
                  </Form.Group>
                </Col>
                <Col md={3}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</Form.Label>
                    <Form.Control
                      type="text"
                      name="country"
                      value={guestData.country}
                      onChange={handleInputChange}
                      placeholder="‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®"
                    />
                  </Form.Group>
                </Col>
                <Col md={3}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</Form.Label>
                    <Form.Control
                      type="text"
                      name="zipCode"
                      value={guestData.zipCode}
                      onChange={handleInputChange}
                      placeholder="‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
                    />
                  </Form.Group>
                </Col>
              </Row>
            </div>
          </div>
          
          {/* ID Documents */}
          <div className="card mb-4">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-card-text me-2"></i>
                ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß
              </h6>
            </div>
            <div className="card-body">
              <Row>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</Form.Label>
                    <Form.Select
                      name="idType"
                      value={guestData.idType}
                      onChange={handleInputChange}
                    >
                      <option value="National ID">‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</option>
                      <option value="Passport">‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï</option>
                      <option value="Driver License">‡πÉ‡∏ö‡∏Ç‡∏±‡∏ö‡∏Ç‡∏µ‡πà</option>
                    </Form.Select>
                  </Form.Group>
                </Col>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</Form.Label>
                    <Form.Control
                      type="text"
                      name="idNumber"
                      value={guestData.idNumber}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß"
                    />
                  </Form.Group>
                </Col>
                <Col md={4}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</Form.Label>
                    <Form.Control
                      type="text"
                      name="passportNumber"
                      value={guestData.passportNumber}
                      onChange={handleInputChange}
                      placeholder="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï"
                    />
                  </Form.Group>
                </Col>
              </Row>
            </div>
          </div>
          
          {/* Emergency Contact */}
          <div className="card mb-4">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-telephone me-2"></i>
                ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
              </h6>
            </div>
            <div className="card-body">
              <Row>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</Form.Label>
                    <Form.Control
                      type="text"
                      name="emergencyContact"
                      value={guestData.emergencyContact}
                      onChange={handleInputChange}
                      placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                    />
                  </Form.Group>
                </Col>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</Form.Label>
                    <Form.Control
                      type="tel"
                      name="emergencyPhone"
                      value={guestData.emergencyPhone}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"
                    />
                  </Form.Group>
                </Col>
              </Row>
            </div>
          </div>
          
          {/* Special Requests */}
          <div className="card mb-4">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-star me-2"></i>
                ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©
              </h6>
            </div>
            <div className="card-body">
              <Row>
                <Col md={12}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©</Form.Label>
                    <Form.Control
                      as="textarea"
                      rows={3}
                      name="specialRequests"
                      value={guestData.specialRequests}
                      onChange={handleInputChange}
                      placeholder="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà, ‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ"
                    />
                  </Form.Group>
                </Col>
              </Row>
              
              <Row>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£</Form.Label>
                    <Form.Control
                      type="text"
                      name="dietaryRestrictions"
                      value={guestData.dietaryRestrictions}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏±‡∏á‡∏™‡∏ß‡∏¥‡∏£‡∏±‡∏ï‡∏¥, ‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏•"
                    />
                  </Form.Group>
                </Col>
                <Col md={6}>
                  <Form.Group className="mb-3">
                    <Form.Label>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©</Form.Label>
                    <Form.Control
                      type="text"
                      name="accessibilityNeeds"
                      value={guestData.accessibilityNeeds}
                      onChange={handleInputChange}
                      placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏Å‡∏≤‡∏£, ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢"
                    />
                  </Form.Group>
                </Col>
              </Row>
            </div>
          </div>
          
          {/* Marketing Consent */}
          <div className="card mb-3">
            <div className="card-header">
              <h6 className="mb-0">
                <i className="bi bi-envelope-heart me-2"></i>
                ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î
              </h6>
            </div>
            <div className="card-body">
              <Form.Check
                type="checkbox"
                name="marketingConsent"
                checked={guestData.marketingConsent}
                onChange={handleInputChange}
                label="‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°"
                className="mb-2"
              />
              <Form.Check
                type="checkbox"
                name="newsletterSubscription"
                checked={guestData.newsletterSubscription}
                onChange={handleInputChange}
                label="‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡πà‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©"
              />
            </div>
          </div>
        </Form>
      </Modal.Body>
      
      <Modal.Footer>
        <Button variant="secondary" onClick={onHide} disabled={loading}>
          ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        </Button>
        <Button 
          variant="primary" 
          onClick={handleSave} 
          disabled={loading || !validateForm()}
        >
          {loading ? (
            <>
              <Spinner animation="border" size="sm" className="me-2" />
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...
            </>
          ) : (
            <>
              <i className="bi bi-check-circle me-2"></i>
              ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </>
          )}
        </Button>
      </Modal.Footer>
    </Modal>
  );
};

export default GuestDataCompletionModal;
