const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkAllBookings() {
  try {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...\n');

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏° relations
    const bookings = await prisma.booking.findMany({
      include: {
        guest: {
          select: {
            id: true,
            firstName: true,
            lastName: true,
            email: true,
            phoneNumber: true
          }
        },
        room: {
          select: {
            id: true,
            roomNumber: true,
            roomType: {
              select: {
                id: true,
                name: true,
                pricePerNight: true
              }
            }
          }
        },
        createdBy: {
          select: {
            id: true,
            email: true
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    });

    if (bookings.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      return;
    }

    console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${bookings.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`);
    console.log('=' .repeat(80));

    bookings.forEach((booking, index) => {
      console.log(`üìã Booking #${index + 1}`);
      console.log(`   ID: ${booking.id}`);
      console.log(`   Booking Reference: ${booking.bookingReferenceId || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
      console.log(`   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${booking.status}`);
      console.log(`   Check-in: ${booking.checkinDate ? new Date(booking.checkinDate).toLocaleDateString('th-TH') : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   Check-out: ${booking.checkoutDate ? new Date(booking.checkoutDate).toLocaleDateString('th-TH') : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà: ${booking.numAdults || 0} ‡∏Ñ‡∏ô`);
      console.log(`   ‡πÄ‡∏î‡πá‡∏Å: ${booking.numChildren || 0} ‡∏Ñ‡∏ô`);
      console.log(`   ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø${booking.totalAmount ? Number(booking.totalAmount).toLocaleString() : '0'}`);
      
      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Ç‡∏Å
      if (booking.guest) {
        console.log(`   üë§ ‡πÅ‡∏Ç‡∏Å: ${booking.guest.firstName} ${booking.guest.lastName}`);
        console.log(`      Email: ${booking.guest.email}`);
        console.log(`      ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${booking.guest.phoneNumber || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      } else {
        console.log(`   üë§ ‡πÅ‡∏Ç‡∏Å: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
      }

      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á
      if (booking.room) {
        console.log(`   üè® ‡∏´‡πâ‡∏≠‡∏á: ${booking.room.roomNumber}`);
        if (booking.room.roomType) {
          console.log(`      ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${booking.room.roomType.name}`);
          console.log(`      ‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏Ñ‡∏∑‡∏ô: ‡∏ø${Number(booking.room.roomType.pricePerNight).toLocaleString()}`);
        }
      } else {
        console.log(`   üè® ‡∏´‡πâ‡∏≠‡∏á: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏`);
      }

      // ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Booking
      if (booking.createdBy) {
        console.log(`   üë®‚Äçüíº ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢: ${booking.createdBy.email}`);
      }

      console.log(`   üìÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date(booking.createdAt).toLocaleString('th-TH')}`);
      console.log(`   üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date(booking.updatedAt).toLocaleString('th-TH')}`);
      console.log('-'.repeat(80));
    });

    // ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Booking:');
    const statusCount = bookings.reduce((acc, booking) => {
      acc[booking.status] = (acc[booking.status] || 0) + 1;
      return acc;
    }, {});

    Object.entries(statusCount).forEach(([status, count]) => {
      console.log(`   ${status}: ${count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    });

    const totalRevenue = bookings.reduce((sum, booking) => {
      return sum + (Number(booking.totalAmount) || 0);
    }, 0);

    console.log(`\nüí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°: ‡∏ø${totalRevenue.toLocaleString()}`);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Booking:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkAllBookings();